datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Users {
    id             String     @id @default(auto()) @map("_id") @db.ObjectId
    provider_id    String?    @unique
    username       String     @unique
    email          String     @unique
    password       String?
    totp           String?
    totp_expiry    Int?
    email_verified Boolean    @default(false)
    created_at     DateTime   @default(now())
    updated_at     DateTime   @updatedAt
    last_login     String?
    last_logout    String?
    ip_address     String?
    login_token    String?
    auth_method    AuthMethod
    Profile        Profiles?
    Account        Accounts?
    Message        Messages?
}

model Profiles {
    id           String @id @default(auto()) @map("_id") @db.ObjectId
    avatar       Media
    profileViews Int    @default(0)
    user         Users  @relation(fields: [userId], references: [id])
    userId       String @unique @db.ObjectId
}

model Accounts {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId
    verified Boolean @default(false)
    user     Users   @relation(fields: [userId], references: [id])
    userId   String  @unique @db.ObjectId
}

model Messages {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    messages Body[]
    user     Users  @relation(fields: [userId], references: [id])
    userId   String @unique @db.ObjectId
}

type Body {
    idx      String
    contents String
    Medias   Media[]
}

type Media {
    idx  String?
    url  String
    path String
    type String?
}

enum AuthMethod {
    google
    github
    local
}
